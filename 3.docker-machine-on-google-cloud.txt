https://docs.docker.com/machine/drivers/gce/
Create machines on Google Compute Engine. You need a Google account and a project ID. 

Credentials

The Google driver uses Application Default Credentials to get authorization credentials for use in calling Google APIs.

So if docker-machine is used from a GCE host, authentication occurs automatically via the built-in service account. Otherwise, install gcloud and get through the oauth2 process with gcloud auth login.


Or, manually download the credentials.json file to the local, and set the GOOGLE_APPLICATION_CREDENTIALS environment variable point to its location, such as:

export GOOGLE_APPLICATION_CREDENTIALS=$HOME/gce-credentials.json

for Windows machine, using the following instead:
set GOOGLE_APPLICATION_CREDENTIALS=$HOME/gce-credentials.json

$ gcloud auth login
$ docker-machine create --driver google --google-project visualzero-demo vm01
$ docker-machine create --driver google \
  --google-project visualzero-demo \
  --google-zone us-central1-a \
  --google-machine-type f1-micro \
  vm02

$ docker-machine create --driver google \
>   --google-project visualzero-demo \
>   --google-zone us-central1-a \
>   --google-machine-type f1-micro \
>   vm02
Running pre-create checks...
(vm02) Check that the project exists
(vm02) Check if the instance already exists
Creating machine...
(vm02) Generating SSH Key
(vm02) Creating host...
(vm02) Opening firewall ports
(vm02) Creating instance
(vm02) Waiting for Instance
(vm02) Uploading SSH Key
Waiting for machine to be running, this may take a few minutes...
Detecting operating system of created instance...
Waiting for SSH to be available...
Detecting the provisioner...
Provisioning with ubuntu(systemd)...
Installing Docker...
Copying certs to the local machine directory...
Copying certs to the remote machine...
Setting Docker configuration on the remote daemon...
Checking connection to Docker...
Docker is up and running!
To see how to connect your Docker Client to the Docker Engine running on this virtual machine, run: C:\Program Files\Docker Toolbox\docker-machine.exe env vm02

$ docker-machine ls
NAME         ACTIVE   DRIVER       STATE     URL                         SWARM   DOCKER      ERRORS
default      *        virtualbox   Running   tcp://192.168.99.100:2376           v19.03.12
dockerhost   -        virtualbox   Running   tcp://192.168.99.101:2376           v19.03.12
vm01         -        google       Running   tcp://35.225.74.59:2376             v19.03.12
vm02         -        google       Running   tcp://35.223.220.132:2376           v19.03.13

$ docker-machine env vm02
export DOCKER_TLS_VERIFY="1"
export DOCKER_HOST="tcp://35.223.220.132:2376"
export DOCKER_CERT_PATH="C:\Users\username\.docker\machine\machines\vm02"
export DOCKER_MACHINE_NAME="vm02"
export COMPOSE_CONVERT_WINDOWS_PATHS="true"
# Run this command to configure your shell:
# eval $("C:\Program Files\Docker Toolbox\docker-machine.exe" env vm02)

$ docker-machine ssh vm02
Welcome to Ubuntu 16.04.2 LTS (GNU/Linux 4.10.0-27-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

  Get cloud support with Ubuntu Advantage Cloud Guest:
    http://www.ubuntu.com/business/services/cloud

253 packages can be updated.
170 updates are security updates.

New release '18.04.5 LTS' available.
Run 'do-release-upgrade' to upgrade to it.


docker-user@vm02:~$

sudo docker images
docker pull <image name>
docker run <image name>
docker run --name MyContainer -it ubuntu bash
sudo docker ps -a
sudo docker stop MyContainer
docker top <container ID or name>
docker stats
sudo docker kill MyContainer

sudo docker run --name=Ubuntu_Test ubuntu:18.04

ubuntulab@vm01:~$ sudo docker run --name=Ubuntu_Test ubuntu:18.04
Unable to find image 'ubuntu:18.04' locally
18.04: Pulling from library/ubuntu
5d9821c94847: Pull complete
a610eae58dfc: Pull complete
a40e0eb9f140: Pull complete
Digest: sha256:2f1aaf987e9f4806f076a08b1263f2b81376a54f811bb971434c483bd78eb858
Status: Downloaded newer image for ubuntu:18.04


$ docker-machine env vm01
export DOCKER_TLS_VERIFY="1"
export DOCKER_HOST="tcp://35.225.74.59:2376"
export DOCKER_CERT_PATH="C:\Users\waynexing\.docker\machine\machines\vm01"
export DOCKER_MACHINE_NAME="vm01"
export COMPOSE_CONVERT_WINDOWS_PATHS="true"
# Run this command to configure your shell:
# eval $("C:\Program Files\Docker Toolbox\docker-machine.exe" env vm01)

$ ls "C:\Users\waynexing\.docker\machine\machines\vm01"
ca.pem    config.json  id_rsa.pub  server.pem
cert.pem  id_rsa       key.pem     server-key.pem

$ eval $("C:\Program Files\Docker Toolbox\docker-machine.exe" env vm01)

$ docker run --name tmp-nginx-container -d nginx
Unable to find image 'nginx:latest' locally
latest: Pulling from library/nginx
d121f8d1c412: Pull complete
ebd81fc8c071: Pull complete
655316c160af: Pull complete
d15953c0e0f8: Pull complete
2ee525c5c3cc: Pull complete
Digest: sha256:c628b67d21744fce822d22fdcc0389f6bd763daac23a6b77147d0712ea7102d0
Status: Downloaded newer image for nginx:latest
3555ca854f2725a378b41f58fb2d8998e19f07f0bd20e47075db8e5ae5b41d58

$ docker run --name myngixcontainer -d nginx:alpine
Unable to find image 'nginx:alpine' locally
alpine: Pulling from library/nginx
df20fa9351a1: Pull complete
3db268b1fe8f: Pull complete
f682f0660e7a: Pull complete
7eb0e8838bc0: Pull complete
e8bf1226cc17: Pull complete
Digest: sha256:a97eb9ecc708c8aa715ccfb5e9338f5456e4b65575daf304f108301f3b497314
Status: Downloaded newer image for nginx:alpine
76a23a31b06ad1675f1ceceacfd4843af3df47cdf814e98ed07a260d72267c27

$ docker container ls
CONTAINER ID        IMAGE               COMMAND                  CREATED              STATUS              PORTS               NAMES
76a23a31b06a        nginx:alpine        "/docker-entrypoint."   19 seconds ago       Up 17 seconds       80/tcp              myngixcontainer
3555ca854f27        nginx               "/docker-entrypoint."   About a minute ago   Up About a minute   80/tcp              tmp-nginx-container

$ docker-machine ssh vm01
Welcome to Ubuntu 18.04.5 LTS (GNU/Linux 4.15.0-117-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

  Get cloud support with Ubuntu Advantage Cloud Guest:
    http://www.ubuntu.com/business/services/cloud

 * Canonical Livepatch is available for installation.
   - Reduce system reboots and improve kernel security. Activate at:
     https://ubuntu.com/livepatch

0 packages can be updated.
0 updates are security updates.

docker-user@vm01:~$ sudo docker container ls
CONTAINER ID        IMAGE               COMMAND                  CREATED              STATUS              PORTS               NAMES
76a23a31b06a        nginx:alpine        "/docker-entrypoint.."   About a minute ago   Up About a minute   80/tcp              myngixcontainer
3555ca854f27        nginx               "/docker-entrypoint.."   2 minutes ago        Up 2 minutes        80/tcp              tmp-nginx-container
docker-user@vm01:~$

docker-user@vm01:~$ ps aux | grep dockerd
docker-+  1641  0.0  0.0  13136  1044 pts/1    S+   19:12   0:00 grep --color=auto dockerd
root      1768  0.0  2.8 836620 107632 ?       Ssl  Sep17   0:15 /usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --storage-driver overlay2 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc
/docker/server-key.pem --label provider=google
docker-user@vm01:~$

$ docker-machine rm vm01
About to remove vm01
WARNING: This action will delete both local reference and remote instance.
Are you sure? (y/n): y
(vm01) Deleting instance.
(vm01) Waiting for instance to delete.

$ gcloud compute instances list
Listed 0 items.


Updates are available for some Cloud SDK components.  To install them,
please run:
  $ gcloud components update


